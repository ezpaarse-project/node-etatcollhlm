#!/usr/bin/env node

const program = require('commander');
const pkg = require('../package.json');

const logger = require('../lib/logger');

const { config } = require('./cmds/config');
const { ping } = require('./cmds/ping');
const { insertion } = require('./cmds/insert');
const { reset, init } = require('./cmds/index');
const { info } = require('./cmds/info');
const { download } = require('./cmds/download');

program.on('command:*', () => {
  logger.error(`Invalid command: ${program.args.join(' ')}\nSee --help for a list of available commands.`);
  process.exit(1);
});

program.version(pkg.version);

program
  .command('config')
  .option('-g --get', 'display the configuration')
  .option('-s --set', 'initialize the configuration file in $HOME/.config')
  .option('--url <url>', 'elastic url')
  .option('--port <port>', 'elastic port')
  .option('--user <user>', 'elastic user')
  .option('--password <password>', 'elastic password')
  .option('-l --list', 'list of attributes required for configuration')
  .description('make the config to fetch ez-meta')
  .action((args) => config(args));

program
  .command('init')
  .description('init elastic index')
  .option('-u --use <use>', 'use a custom config')
  .action((args) => init(args));

program
  .command('reset')
  .description('empty elastic index')
  .option('-u --use <use>', 'use a custom config')
  .action((args) => reset(args));

program
  .command('ping')
  .description('Check if service is available')
  .option('-u --use <use>', 'use a custom config')
  .action((args) => ping(args));

program
  .command('insert')
  .option('-f --file <file>', 'file to which its content is inserted in a elastic')
  .option('-v --verbose', 'verbose')
  .option('-u --use <use>', 'use a custom config')
  .action((args) => insertion(args));

program
  .command('info')
  .description('info of elastic index')
  .option('-u --use <use>', 'use a custom config')
  .action((args) => info(args));

program
  .command('download')
  .description('download a package')
  .option('-i --institute <institute>', 'institute')
  .option('-r --resume', 'resume')
  .option('-u --use <use>', 'use a custom config')
  .action((args) => download(args));

program.parse(process.argv);
